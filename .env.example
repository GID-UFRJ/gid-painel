# Variáveis de Ambiente Essenciais para a Aplicação Django (gid-painel)
# ====================================================================

# Chave secreta do Django. MUDE ISSO em produção!
# Gere string longa e aleatória.
# Ex: use o comando abaixo:
# python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
DJANGO_SECRET_KEY=sua_chave_secreta_aqui

# Modo de depuração do Django. Use 'False' em produção.
DJANGO_DEBUG=False

# Hosts permitidos para o Django.
# Separe por vírgulas, ex: 'localhost,127.0.0.1,seuhost.com'
# Em produção, substitua 'seuhost.com' pelo seu domínio real.
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1

# Porta que o Gunicorn/Django vai escutar dentro do contêiner.
# O Caddy será configurado para se comunicar com esta porta.
DJANGO_PORT=8000

# Número de workers do Gunicorn.
# '1' por padrão para desenvolvimento. Em produção, ajuste conforme a carga.
GUNICORN_WORKERS=1

# Caminho onde o Django coletará os arquivos estáticos dentro do contêiner.
# Deve ser um diretório montado via volume e acessível pelo Caddy.
DJANGO_STATIC_ROOT=/app/staticfiles


# Configurações do Banco de Dados PostgreSQL
# =======================================

# Nome de usuário para acesso ao PostgreSQL
POSTGRES_USER=gid

# Nome do banco de dados principal
POSTGRES_DB=gid_db

# Senha do usuário PostgreSQL
POSTGRES_PASSWORD=gid_dashboard

# Host do servidor PostgreSQL (e.g. nome do serviço no Docker Compose ou 'localhost' para desenvolvimento local)
POSTGRES_HOST=postgres

# Porta do servidor PostgreSQL (geralmente não deve ser alterada)
POSTGRES_PORT=5432

# Configurações do Redis
# =======================================
# Host do servidor Redis (o nome do serviço no Docker Compose ou 'localhost' para desenvolvimento local)
REDIS_HOST=redis

# Porta do servidor Redis 
REDIS_PORT=6379

# Configurações do Servidor Web Caddy (Reverse Proxy/SSL)
# ======================================================

# Domínio principal que o Caddy irá servir.
# Use 'localhost' ou '127.0.0.1' para desenvolvimento.
# Em produção, substitua pelo seu domínio real (ex: meuapp.com.br).
CADDY_DOMAIN=localhost

# E-mail para o Let's Encrypt - emissão de certificados SSL.
# Use um e-mail válido para produção; pode ser qualquer um para desenvolvimento.
# Para que a terminação SSL/TLS feita pelo Caddy funcione, descomente a linha 'tls' do Caddyfile.
CADDY_EMAIL=dev@example.com


# Configurações do Superusuário Django (usadas pelo script create_superuser.py)
# ===========================================================================

# Nome de usuário para o superusuário
DJANGO_SUPERUSER_USERNAME=admin

# E-mail para o superusuário
DJANGO_SUPERUSER_EMAIL=admin@example.com

# Senha para o superusuário (USE UMA SENHA FORTE E ÚNICA!)
DJANGO_SUPERUSER_PASSWORD=senha_super_segura_aqui

